





func int name(){------------------------------------->  create_label("name");
                                                        create_new_stack();


    int a = 10;------------------------------------->   create_variable("a", 4); //4 bytes for int
                                                        set_var("a", 10); //store 10 in a



                                                        
    for(int i = 0; i < 10; i++){ -------------------->  create_variable("i", 4);
                                                        set_var("i", 0);
                                                        create_label("loop1");

                                                        get_var(REG_EAX, "i");
                                                        cmp(REG_EAX, 10);
                                                        jump_if_greater("end_loop1");


        a = a + 1; --------------------------------->   get_var(REG_EAX, "a");
                                                        add(REG_EAX, 1);
                                                        set_var("a", REG_EAX);
    

    ------------------------------------------------->  get_var(REG_EAX, "i");
                                                        add(REG_EAX, 1);
                                                        set_var("i", REG_EAX);
                                                        jump("loop1");
                                                       
    }------------------------------------------------>  create_label("end_loop1");
                                                       



    return a;---------------------------------------->  get_var(REG_EAX, "a");
                                                        restore_stack();
                                                        ret();
}









///EXAMPLE

    create_new_stack();

    jmp("start");
    mov_eax(0);

    // criar uma funcao que est no example

    create_label("func_name"); // func int name(){
    create_new_stack();

    create_var("i", 4); // int i;
    set_var("i", 0);    // i = 0;

    create_var("a", 4); // int a;
    set_var("a", 47);   // a = 0;

    create_label("loop1");
    get_var(REG_EAX, "i");
    mov_ebx(10);
    cmp_reg32(REG_EAX, REG_EBX);
    jump_if_equal("end_loop1");

    get_var(REG_EAX, "a");
    inc_reg32(REG_EAX);
    set_var_with_reg("a", REG_EAX); // a++;
    mov_var_from_al("msg2", 0);     // printf("Xloop\n");
    print("msg2", 6);

    get_var(REG_EAX, "i");
    inc_reg32(REG_EAX);
    set_var_with_reg("i", REG_EAX); // i++;
    jmp("loop1");

    create_label("end_loop1");

    print("msg", 7);

    restore_stack();
    ret();

    create_label("start");
    call("func_name");

    restore_stack();
    mov_eax(0x01); // sys_exit
    mov_ebx(0x00); // Exit code 0
    our_syscall();





    result-> 
0loop
1loop
2loop
3loop
4loop
5loop
6loop
7loop
8loop
9loop
END :D



CONSTANTS
create_constant_string("msg", "END :D\n", phdr.p_vaddr + custom_code_size + data_size);
create_constant_string("msg2", "Xloop\n", phdr.p_vaddr + custom_code_size + data_size);
