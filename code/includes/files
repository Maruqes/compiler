func open(dd filename, dd flags, dd mode){
    asm(mov32 eax 5);
    asm(mov32 ebx filename);
    asm(mov32 ecx flags);
    asm(mov32 edx mode);
    asm(syscall);
    return;
}

func write(dd fd, dd buffer, dd len){
    asm(mov32 eax 4);
    asm(mov32 ebx fd);
    asm(mov32 ecx buffer);
    asm(mov32 edx len);
    asm(syscall);
    return;
}

func read(dd fd, dd buffer, dd len){
    asm(mov32 eax 3);
    asm(mov32 ebx fd);
    asm(mov32 ecx buffer);
    asm(mov32 edx len);
    asm(syscall);
    return;
}

func close(dd fd){
    asm(mov32 eax 6);
    asm(mov32 ebx fd);
    asm(syscall);
    return;
}

func fstat(dd fd, dd buffer){
    asm(mov32 eax 108);
    asm(mov32 ebx fd);
    asm(mov32 ecx buffer);
    asm(syscall);
    return;
}

func getStatSize(dd buffer){
    asm(mov32 ebx buffer);
    asm(mov32_r_mi eax ebx 20);
    return;
}


func readFromFile(dd filename){
    dd statbuf = allocMemPage(1);

    dd fd = open(filename, 0, 0);
    dd filestat = fstat(fd, statbuf);
    dd len = getStatSize(statbuf);

    dd bufferLen = len / 4096 + 1;
    dd buffer = allocMemPage(1);
    read(fd, buffer, len);
    close(fd);
    return buffer;
}