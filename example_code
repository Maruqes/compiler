
func int teste(){
    return 1;
}

func int allocMem1Page(){
    int pge = 1;
    asm(mov32 ecx pge);
    asm(mov32 eax 192);
    asm(mov32 ebx 0);
    asm(mov32 edx 3);
    asm(mov32 esi 34);
    asm(mov32 edi -1);
    asm(syscall);
    return;
}

func int main()
{
    int result = -1 + 1;
    


    
    int testeasm = 4;
    int testeasm2 = 1;


    asm(mov32 eax 0);

    asm(create_label testLabel);
    asm(push eax);

    int page1 = allocMem1Page();
    teste();

    asm(mov32 ebx page1);
    asm(mov32 eax 65);
    asm(mov32 ecx 0);

    
    asm(mov_reg_with_regOffset_reg ebx ecx eax);

    asm(mov32 eax 0);
    asm(mov_reg_reg_with_offset eax ebx ecx);

    asm(inc ecx);
    asm(inc eax);
    asm(mov_reg_with_regOffset_reg ebx ecx eax);
    asm(inc ecx);
    asm(inc eax);
    asm(mov_reg_with_regOffset_reg ebx ecx eax);
    asm(inc ecx);
    asm(inc eax);
    asm(mov_reg_with_regOffset_reg ebx ecx eax);
    
    asm(mov_reg_offset_value ebx 4 10);




    asm(mov32 ecx ebx);
    asm(mov32 ebx testeasm2);
    asm(mov32 eax testeasm);
    asm(mov32 edx 5);
    asm(syscall);

    asm(pop eax);
    asm(inc eax);
    asm(mov32 ebx 10);
    asm(cmp32 eax ebx);
    asm(jne testLabel);


    return result;
}